version: '3.9'

# ============================================
# PolkaQuadrant - Production Environment
# Docker Compose Configuration
# ============================================

services:
  # ==========================================
  # Backend API
  # ==========================================
  backend:
    image: ghcr.io/${GITHUB_REPOSITORY:-polkaquadrant/polkaquadrant}-backend:latest
    container_name: polkaquadrant-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      SUPABASE_URL: ${SUPABASE_URL}
      SUPABASE_KEY: ${SUPABASE_KEY}
      CORS_ORIGIN: ${FRONTEND_URL}
      LOG_LEVEL: info
    ports:
      - "4000:4000"
    networks:
      - polkaquadrant-prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ==========================================
  # Frontend Dashboard
  # ==========================================
  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY:-polkaquadrant/polkaquadrant}-frontend:latest
    container_name: polkaquadrant-frontend-prod
    restart: always
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${BACKEND_URL}
      NEXT_PUBLIC_WS_URL: ${BACKEND_WS_URL}
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - polkaquadrant-prod
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  # ==========================================
  # Nginx Reverse Proxy
  # ==========================================
  nginx:
    image: nginx:alpine
    container_name: polkaquadrant-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - polkaquadrant-prod
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

networks:
  polkaquadrant-prod:
    driver: bridge
    name: polkaquadrant-prod-network

volumes:
  nginx_cache:
    name: polkaquadrant-nginx-cache
